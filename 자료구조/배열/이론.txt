#
c언어의 배열은 크기가 고정되어 있고,
같은 타입의 데이터만 담을 수 있다.
c언어의 배열은 주솟값에 연속적으로 값을 입력하는 방식이다.
이와 다르게 파이썬의 배열은 각 인덱스마다 값의 레퍼런스를 가리키기 때문에
큰 값을 넣거나 작은 값을 넣거나 상관이 없다.

#
정적배열: 크기 고정(요소 수 제한)
동적배열: 크기 변함(요소 계속 추가 가능)
#동적배열:
정적배열로 만들어진 자료구조
정적 배열의 크기를 상황에 맞게 조절한다.
배열이 꽉 찬다면 2배 정도 큰 배열을 만든다.
그리고 값을 복사하고 값을 추가한다.

#
동적 배열 추가 연산 시간 복잡도:
1. 배열에 여유 공간이 있을 때 : O(1) <- 자주 일어남
2. 정적 배열이 꽉 찼을 때ㅣ O(n) <- 가끔 일어남
보통 시간 복잡도를 얘기할 때 최악의 경우를 말한다.
허나 가끔 일어나는 최악의 경우는 불합리하다 볼 수 있다.
# 분할 상환 분석(Amortized Analysis): 할부
같은 동작을 n번 했을 때 드는 시간이 x일 때
동작을 한 번 하는 데 걸린 시간은 x/n
~
분할 상환 분석은 최악의 시간을 얘기하지 않고 평균을 얘기한다.
최악의 경우로 시간 복잡도를 얘기하는 것이 비합리적인 경우에 사용한다.
~
분할 상환 분석을 한다고 꼭 시간 복잡도가 줄어드는 건 아니다.
보통은 할부 개념을 적용해도 시간 복잡도가 줄어들진 않는다.
하지만 최악의 경우보다 분할 상환 분석을 한 시간 복잡도가 더 적다면
분할상환분석 시간복잡도를 사용한다.
쉽게 말해 '동적 배열의 끝에 데이터를 추가할 때는 O(1)이 걸린다'라 해도 된다는 소리다.
