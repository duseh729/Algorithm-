#
정렬은 알고리즘의 기초이다.
정렬을 배우며 문제 해결의 기초를 다질 수 있다.
모든 개발자가 알아야 하는 가장 기본적인 알고리즘이다.

거의 정렬된 리스트를 정렬할 떄는 '삽입 정렬'이 가장 빠르고
무작위 순서의 리스트를 정렬할 때는 '힙 정렬'
'선택 정렬'과 '합병 정렬'은 상황에 영향을 받지 않고 시간이 소요 된다는 점.

정렬 문제의 경우 절대적 좋은 답이 없다. 상황에 따른 각 알고리즘의 장단점을 파악해야
올바른 알고리즘을 선택할 수 있다. 그렇기 때문에 문제를 해결하는 방법을 넘어서
알고리즘을 평가하는 능력을 길러야 한다.
#
선택 정렬:
각 위치에 어떤 값이 들어갈지 찾는다.
가장 먼저 생각이 날 수 있는 자연스러운 정렬 알고리즘
가장 작은 값을 찾아서 0번 인덱스에 넣고
그다음 작은 값을 1번 인덱스에 넣고
.
.
.

#
삽입 정렬
각 값이 어떤 위치에 들어갈지 찾는다.
값의 올바른 위치를 찾는다.
2 5 6 8 9 새로운 값 7
2 5 6 8 7 9
2 5 6 7 8 9

#
합병 정렬(divide and conquer)
리스트를 반으로 계속 나눔.
그래서 길이가 1이 될 때 크기가 작은 순서대로 합침.
merge함수를 통해 작은 값을 비교해 합친다.

#
퀵정렬(divide and conquer)
퀵정렬에서 리스트를 나누는 과정을 partition이라 부른다.
기준점(pivot)기준점은 보통 마지막 배열로 정함. 기준보다 작은 값은 왼쪽 큰 값은 오른쪽으로 정렬한 후
왼쪽과 오른쪽을 퀵정렬한다.
그래서 partition이 제일 중요하다.